version: '2'

networks:

  rum-net:
    driver: bridge
    ipam:
      config:
        - subnet: "${NETWORK_ADDRESS}.0/24"
          gateway: "${NETWORK_ADDRESS}.1"
          ip_range: "${NETWORK_ADDRESS}.128/25"

volumes:

  portainer-data:
    driver: local

  cacti-rra:
    driver: local

services:

  mysql:
    image: mysql:5
    container_name: rum-mysql
    networks: 
      rum-net:
        aliases:
         - "mysql.${DOMAIN}"
        ipv4_address: "${NETWORK_ADDRESS}.${HOST_IP_MYSQL}"
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
    volumes:
      - "${RUMMAGER_PACK_DIR}/etc/mysql:/etc/mysql/conf.d"
      - "${MYSQL_DATA}:/var/lib/mysql"

  dev-mysql:
    extends: 
      service: mysql
    ports:
      - "${HOST_NET_ADDR}:3306:3306/tcp"

  dev-mysql55:
    image: mysql:5.5
    container_name: rum-mysql55
    networks: 
      rum-net:
        aliases:
         - "mysql55.${DOMAIN}"
    ports:
      - "${HOST_NET_ADDR}:3316:3306/tcp"
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"

  rum-tech:
    build: ./images/tech
    image: rummager-tech
    container_name: rum-tech
    networks:
      rum-net:
        ipv4_address: "${NETWORK_ADDRESS}.${HOST_IP_TECH}"
    volumes:
      - "${RUMMAGER_PACK_DIR}:/project"
    stdin_open: true
    tty: true

  tech:
    build: ./images/tech9
    image: rummager-tech9
    container_name: rum-tech9
    networks:
      - rum-net
    volumes:
      - "${RUMMAGER_PACK_DIR}:/project"
      - "${BACKUP_DIR}:/backups"
    stdin_open: true
    tty: true

  dev-smtp:
    build: ./images/smtp
    image: rummager-smtp
    container_name: rum-smtp
    networks:
      rum-net:
        ipv4_address: "${NETWORK_ADDRESS}.${HOST_IP_SMTP}"
    cap_add:
      - NET_ADMIN

  dev-rumsrv:
    build: ./images/service
    image: rummager-service
    container_name: rum-rumsrv
    volumes:
      - "${RUMMAGER_PACK_DIR}/${SRC_RUMSRV}:/project/rumsrv"
    networks:
      rum-net:
        aliases:
         - "rumsrv.${DOMAIN}"
         - "rumsrv.local"
        ipv4_address: "${NETWORK_ADDRESS}.${HOST_IP_RUMSRV}"
    ports:
      - "${HOST_NET_ADDR}:80:80/tcp"
      - "${HOST_NET_ADDR}:443:443/tcp"
    depends_on:
      - dev-mysql

  dev-worker:
    build: ./images/worker
    image: rummager-worker
    container_name: rum-worker
    volumes:
      - "${RUMMAGER_PACK_DIR}/${SRC_RUMMAGER}:/project/rummager"
    networks: 
      - rum-net
    environment:
      RUMMAGER_LOG_TYPE: stdout
      RUMMAGER_SOAPURL: http://rumsrv.local/soap.php?WSDL&readable
      RUMMAGER_SOAPURL_SENDER: http://rumsrv.local/soap-sender.php?WSDL&readable
    stdin_open: true
    tty: true
    cap_add:
      - NET_ADMIN
    mem_limit: 1024m
    depends_on:
      - dev-rumsrv
      - dev-smtp

  dns:
    build: ./images/dnsmasq
    image: rum-dns
    container_name: rum-dns
    networks:
      rum-net:
        aliases:
          - dns.${DOMAIN}
        ipv4_address: "${NETWORK_ADDRESS}.${HOST_IP_DNS}"
    volumes:
      - "${RUMMAGER_PACK_DIR}/etc/dnsmasq:/usr/local/etc/dnsmasq"
    ports:
      - "${HOST_NET_ADDR}:53:53/udp"     
      - "${HOST_NET_ADDR}:53:53/tcp"     
    cap_add:
      - NET_ADMIN

  vpn:
    build: ./images/vpn
    image: rum-vpn
    container_name: rum-vpn
    networks:
      rum-net:
        aliases:
          - vpn.${DOMAIN}
    ports: 
      - "${HOST_NET_ADDR}:1194:1194/udp"
    volumes:
      - "${RUMMAGER_PACK_DIR}/etc/openvpn:/etc/openvpn"
    cap_add:
      - NET_ADMIN

  portainer:
    image: portainer/portainer
    container_name: portainer
    volumes:
      - portainer-data:/data
      - ${DOCKER_SOCKET}:/var/run/docker.sock
    networks:
      rum-net:
        aliases:
          - portainer.${DOMAIN}

  ssh-passthrough:
    image: lbacik/ssh-passthrough
    container_name: rum-ssh-passthrough
    networks:
      - rum-net
    ports:
      - "${HOST_NET_ADDR}:2222:22/tcp"
    volumes:
      - "${DOCKER_SOCKET}:/var/run/docker.sock"
      - "${RUMMAGER_PACK_DIR}/etc/sshpassthrough/authorizedkeys:/project/authorizedkeys"      
    environment:
      AUTH_METHOD: publickey
      AUTHORIZED_KEYS: /project/authorizedkeys
      SHELL: bash

  cacti:
    build: ./images/cacti
    image: rum-cacti
    container_name: rum-cacti
    networks:
      rum-net:
        aliases:
          - cacti.${DOMAIN}
    volumes:
      - "cacti-rra:/var/lib/cacti/rra"
    environment:
      VIRTUAL_HOST: "cacti.proxy.${DOMAIN}"

  cron:
    build: ./images/cron
    image: rum-cron
    container_name: rum-cron
    networks:
      - rum-net
    volumes:
      - "${DOCKER_SOCKET}:/var/run/docker.sock"

  docker-image-builder:
    image: lbacik/docker-image-builder
    container_name: docker-image-builder
    volumes:
      - "${RUMMAGER_PACK_DIR}:/project"
      - "${DOCKER_IMAGES_BUILDS}:/docker-images-builds"
      - "${DOCKER_SOCKET}:/var/run/docker.sock"
    networks:
      - rum-net

  proxy:
    image: jwilder/nginx-proxy
    container_name: rum-proxy
    networks:
      - rum-net
    ports:
      - "${HOST_NET_ADDR}:80:80/tcp"
      - "${HOST_NET_ADDR}:443:443/tcp"
    volumes:
      - "${DOCKER_SOCKET}:/tmp/docker.sock:ro"
